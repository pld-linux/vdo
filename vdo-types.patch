--- vdo-8.2.2.2/utils/uds/index-layout.c.orig	2023-06-20 23:21:16.000000000 +0200
+++ vdo-8.2.2.2/utils/uds/index-layout.c	2023-09-18 18:22:26.458891054 +0200
@@ -1990,9 +1990,9 @@ static int create_layout_factory(struct
 	writable_size = get_uds_writable_size(factory) & -UDS_BLOCK_SIZE;
 	if (writable_size < config->size + config->offset) {
 		put_uds_io_factory(factory);
-		uds_log_error("index storage (%zu) is smaller than the requested size %zu",
+		uds_log_error("index storage (%zu) is smaller than the requested size %"PRIu64,
 			      writable_size,
-			      config->size + config->offset);
+			      (uint64_t)(config->size + config->offset));
 		return -ENOSPC;
 	}
 
--- vdo-8.2.2.2/utils/vdo/fileLayer.c.orig	2023-09-18 18:22:44.048795761 +0200
+++ vdo-8.2.2.2/utils/vdo/fileLayer.c	2023-09-18 18:26:50.834125477 +0200
@@ -138,10 +138,10 @@ static int performIO(FileLayer
       if (n == 0) {
         errno = VDO_UNEXPECTED_EOF;
       }
-      return uds_log_error_strerror(errno, "p%s %s @%zd",
+      return uds_log_error_strerror(errno, "p%s %s @%"PRId64,
                                     (read ? "read" : "write"),
                                     layer->name,
-                                    offset);
+                                    (int64_t)offset);
     }
 
     offset += n;
@@ -359,8 +359,8 @@ static int setupFileLayer(const char
     layer->blockCount = deviceBlocks;
   } else if (layer->blockCount != deviceBlocks) {
     result = uds_log_error_strerror(VDO_PARAMETER_MISMATCH,
-                                    "physical size %ld 4k blocks must match"
-                                    " physical size %ld 4k blocks of %s",
+                                    "physical size %"PRId64" 4k blocks must match"
+                                    " physical size %"PRId64" 4k blocks of %s",
                                     layer->blockCount, deviceBlocks,
                                     layer->name);
     try_close_file(layer->fd);
--- vdo-8.1.1.360/utils/vdo/vdolistmetadata.c.orig	2022-05-10 20:38:49.821771423 +0200
+++ vdo-8.1.1.360/utils/vdo/vdolistmetadata.c	2022-05-10 20:38:54.738411454 +0200
@@ -116,7 +116,7 @@ static void listBlocks(const char
                        physical_block_number_t  startBlock,
                        block_count_t            count)
 {
-  printf("%ld .. %ld: %s\n", startBlock, startBlock + count - 1, label);
+  printf("%"PRId64" .. %"PRId64": %s\n", startBlock, startBlock + count - 1, label);
 }
 
 /**********************************************************************/
--- vdo-8.1.1.360/utils/vdo/vdoregenerategeometry.c.orig	2022-05-10 20:40:40.487838560 +0200
+++ vdo-8.1.1.360/utils/vdo/vdoregenerategeometry.c	2022-05-10 20:40:43.144490835 +0200
@@ -89,7 +89,7 @@ static Candidate      candidates[UDS_CON
 static int            candidateCount = 0;
 
 static char   *fileName = NULL;
-static size_t  offset   = 0;
+static uint64_t offset  = 0;
 
 /**
  * Explain how this command-line tool is used.
--- vdo-8.1.1.360/utils/vdo/messageStatsReader.c.orig	2022-02-12 21:47:10.000000000 +0100
+++ vdo-8.1.1.360/utils/vdo/messageStatsReader.c	2022-05-10 21:07:02.595934211 +0200
@@ -37,7 +37,7 @@ static int skip_string(char **buf, char
 static int read_uint64_t(char **buf,
 			 uint64_t *value)
 {
-	int count = sscanf(*buf, "%lu, ", value);
+	int count = sscanf(*buf, "%"PRIu64", ", value);
 	if (count != 1) {
 		return VDO_UNEXPECTED_EOF;
 	}
@@ -59,7 +59,7 @@ static int read_uint32_t(char **buf,
 static int read_block_count_t(char **buf,
 			      block_count_t *value)
 {
-	int count = sscanf(*buf, "%lu, ", value);
+	int count = sscanf(*buf, "%"PRIu64", ", value);
 	if (count != 1) {
 		return VDO_UNEXPECTED_EOF;
 	}
--- vdo-8.1.1.360/utils/vdo/vdoStatsWriter.c.orig	2022-02-12 21:47:10.000000000 +0100
+++ vdo-8.1.1.360/utils/vdo/vdoStatsWriter.c	2022-05-10 21:10:54.824676120 +0200
@@ -60,7 +60,7 @@ static int write_block_count_t(char *lab
 
 	maxLabelLength = max(maxLabelLength, (int) strlen(label));
 
-	count = sprintf(values[fieldCount++], "%lu", value);
+	count = sprintf(values[fieldCount++], "%"PRIu64, value);
 	if (count < 0) {
 		return VDO_UNEXPECTED_EOF;
 	}
@@ -77,7 +77,7 @@ static int write_uint64_t(char *label, u
 
 	maxLabelLength = max(maxLabelLength, (int) strlen(label));
 
-	count = sprintf(values[fieldCount++], "%lu", value);
+	count = sprintf(values[fieldCount++], "%"PRIu64, value);
 	if (count < 0) {
 		return VDO_UNEXPECTED_EOF;
 	}
